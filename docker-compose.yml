version: '3.9'

services:
  viewer-backend:
    env_file:
      - .env.azure.local
    build: ./viewer-backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./viewer-backend:/app
      # Local SEG-Y samples live in ./data on host; available as /data in container
      - ./data:/data:ro
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  viewer-ui:
    build: ./viewer-ui
    command: npm run dev -- --host
    volumes:
      - ./viewer-ui:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      viewer-backend:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5173 >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
